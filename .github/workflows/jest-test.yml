name: Jest Tests

on:
  pull_request:
    branches:
      - "**"

permissions:
  contents: read
  pull-requests: write
      - "**"

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests
        id: test
        run: |
          TEST_OUTPUT=$(npm test 2>&1) || STATUS=$?
          echo "status=${STATUS:-0}" >> $GITHUB_OUTPUT
          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$TEST_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_GITHUB_TOKEN }}
          script: |
            const testOutput = process.env.TEST_OUTPUT;
            const status = process.env.STATUS || '0';
            
            // Extract test summary
            const summaryMatch = testOutput.match(/PASS|FAIL.*?(?=\n|$)/);
            const summary = summaryMatch ? summaryMatch[0] : 'Test completed';
            
            const body = `### Test Results (Automated From Github Actions)
                        
            **Status**: ${summary} ${status === '0' ? '✅' : '❌'}

            <details>
            <summary>Test Output</summary>

            \`\`\`
            ${testOutput}
            \`\`\`
            </details>`;
                        
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
        env:
          TEST_OUTPUT: ${{ steps.test.outputs.result }}
          STATUS: ${{ steps.test.outputs.status }}
